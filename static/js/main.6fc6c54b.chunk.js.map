{"version":3,"sources":["logo.svg","Coin.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,I,qCC6BAA,EA1BF,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UAC5D,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACjB,6BAAKT,IACD,mBAAGO,UAAU,cAAb,SAA4BL,OAGxC,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,cAA6BH,EAAOM,oBACnCL,EAAc,EACX,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYM,QAAQ,GAArD,OACC,oBAAGJ,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OAEL,oBAAGJ,UAAU,iBAAb,uBAAyCD,EAAUI,6BCyBxDE,MAtCf,WAEE,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,IAAMC,IAAI,4HACTC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,IAEH,IAIMG,EAAgBd,EAAMe,QAAO,SAAAC,GAAI,OACrCA,EAAK9B,KAAK+B,cAAcC,SAAShB,EAAOe,kBAE1C,OACE,sBAAKxB,UAAU,WAAf,UACA,sBAAKA,UAAU,cAAf,UACA,oBAAIA,UAAU,YAAd,+BACE,+BACE,uBAAO0B,KAAK,OAAOC,YAAY,SAAS3B,UAAU,aAAa4B,SAZhD,SAAAC,GACnBnB,EAAUmB,EAAEC,OAAOC,eAchBV,EAAcW,KAAI,SAAAT,GACjB,OACE,cAAC,EAAD,CAAoB9B,KAAM8B,EAAK9B,KAAMC,MAAO6B,EAAK7B,MACjDC,OAAQ4B,EAAK5B,OAAQI,UAAYwB,EAAKU,WAAYrC,MAAO2B,EAAKW,cAC9DpC,YAAayB,EAAKY,4BAA6BtC,OAAQ0B,EAAKa,cAFjDb,EAAKc,WCxBXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6fc6c54b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './Coin.css';\r\n\r\nconst Coin = ({name, image, symbol, price, volume, priceChange, marketcap}) => {\r\n    return (\r\n        <div className='coin-container'>\r\n            <div className='coin-row'>\r\n                <div className='coin'>\r\n                    <img src={image} alt='crypto'/>\r\n                        <h1>{name}</h1>\r\n                            <p className='coin-symbol'>{symbol}</p>\r\n           \r\n                </div>\r\n                <div className='coin-data'>\r\n                    <p className='coin-price'>${price}</p>\r\n                    <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n                    {priceChange < 0 ? (\r\n                        <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\r\n                    ) : (<p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>)\r\n                    }\r\n                    <p className=\"coin-marketcap\">Mkt cap: ${marketcap.toLocaleString()}</p>\r\n                </div>\r\n            \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin\r\n","import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport Coin from './Coin';\n\n\nfunction App() {\n\n  const [coins, setCoins]= useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(()=>{\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n    .then(res => {\n      setCoins(res.data);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin=>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n    )\n  return (\n    <div className=\"coin-app\">\n    <div className=\"coin-search\">\n    <h1 className=\"coin-text\">Search currencies</h1>\n      <form>\n        <input type=\"text\" placeholder=\"Search\" className=\"coin-input\" onChange={handleChange}/>\n      </form>\n      </div>\n      {filteredCoins.map(coin => {\n        return(\n          <Coin key={coin.id} name={coin.name} image={coin.image} \n          symbol={coin.symbol} marketcap ={coin.market_cap} price={coin.current_price} \n          priceChange={coin.price_change_percentage_24h} volume={coin.total_volume}/>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}